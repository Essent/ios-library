name: Release

on:
  push:
    tags:
      - "[0-9]+.[0-9]+.[0-9]+*"

jobs:
  build:
    if: github.repository == 'urbanairship/ios-library'
    runs-on: macOS-latest
    steps:
      - uses: actions/checkout@v1
      - name: Get the version
        id: get_version
        run: echo ::set-output name=VERSION::${GITHUB_REF/refs\/tags\//}
      - name: Check Version
        run: |
          bash ./scripts/check_version.sh ${{ steps.get_version.outputs.VERSION }}
      - name: CI
        run: |
          bash ./scripts/run_ci_tasks.sh -m tests
          bash ./scripts/run_ci_tasks.sh -m pod_lint
          bash ./scripts/run_ci_tasks.sh -m samples
      - name: Build
        run: |
          bash ./scripts/build.sh
      - name: Build Carthage framework bundle
        run: carthage build --no-skip-current --archive --project-directory ./
      - name: Upload zip distribution
        uses: actions/upload-artifact@v1
        with:
          name: airship
          path: ./build/Airship.zip
      - name: Upload Carthage framework bundle
        uses: actions/upload-artifact@v1
        with:
          name: carthage
          path: ./Airship.framework.zip
      - name: Upload Documentation tar
        uses: actions/upload-artifact@v1
        with:
          name: docs
          path: ./build/Documentation.tar.gz
      - name: Slack Notification
        uses: homoluctus/slatify@master
        if: always()
        with:
          type: ${{ job.status }}
          job_name: "Build iOS SDK :hammer:"
          url: ${{ secrets.SLACK_WEBHOOK }}

  publish-pods:
    runs-on: macOS-latest
    needs: build
    steps:
      - uses: actions/checkout@v1
      - name: Get the version
        id: get_version
        run: echo ::set-output name=VERSION::${GITHUB_REF/refs\/tags\//}
      - name: Publish Pods
        env:
          COCOAPODS_TRUNK_TOKEN: ${{ secrets.COCOAPODS_TRUNK_TOKEN }}
        run: |
          pod trunk push Airship.podspec
          pod trunk push AirshipExtensions.podspec
      - name: Slack Notification
        uses: homoluctus/slatify@master
        if: always()
        with:
          type: ${{ job.status }}
          job_name: "Publish the Pods ${{ steps.get_version.outputs.VERSION }} :tidepod:"
          url: ${{ secrets.SLACK_WEBHOOK }}

  upload-docs:
    runs-on: ubuntu-latest
    needs: build
    steps:
      - uses: actions/checkout@v1
      - name: Download docs tar
        uses: actions/download-artifact@v1
        with:
          name: docs
          path: ./build
      - uses: GoogleCloudPlatform/github-actions/setup-gcloud@master
        with:
          version: "270.0.0"
          service_account_email: ${{ secrets.GCP_SA_EMAIL }}
          service_account_key: ${{ secrets.GCP_SA_KEY }}
      - run: bash ./scripts/upload_docs.sh
      - name: Slack Notification
        uses: homoluctus/slatify@master
        if: always()
        with:
          type: ${{ job.status }}
          job_name: "Uploaded iOS SDK API docs :female-doctor: :male-doctor:"
          url: ${{ secrets.SLACK_WEBHOOK }}

  deploy-bintray:
    runs-on: ubuntu-latest
    needs: build
    steps:
      - uses: actions/checkout@v1
      - name: Download zip distribution
        uses: actions/download-artifact@v1
        with:
          name: airship
          path: ./build
      - name: Publish bintray
        env:
          BINTRAY_AUTH: ${{ secrets.BINTRAY_AUTH }}
        run: bash ./scripts/deploy_bintray.sh
      - name: Slack Notification
        uses: homoluctus/slatify@master
        if: always()
        with:
          type: ${{ job.status }}
          job_name: "Deploy iOS SDK to Bintray :bento:"
          url: ${{ secrets.SLACK_WEBHOOK }}

  deploy-github:
    runs-on: ubuntu-latest
    needs: build
    steps:
      - name: Get the version
        id: get_version
        run: echo ::set-output name=VERSION::${GITHUB_REF/refs\/tags\//}
      - name: Download zip distribution
        uses: actions/download-artifact@v1
        with:
          name: airship
          path: ./build
      - name: Download Carthage framework bundle
        uses: actions/download-artifact@v1
        with:
          name: carthage
          path: ./
      - name: Create Release
        id: create_release
        uses: actions/create-release@v1.0.0
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          tag_name: ${{ steps.get_version.outputs.VERSION }}
          release_name: Release ${{ steps.get_version.outputs.VERSION }}
          draft: false
          prerelease: false
      - name: Upload zip distribution
        uses: actions/upload-release-asset@v1.0.1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          upload_url: ${{ steps.create_release.outputs.upload_url }}
          asset_path: ./build/Airship.zip
          asset_name: Airship.zip
          asset_content_type: application/zip
      - name: Upload Carthage bundle distribution
        uses: actions/upload-release-asset@v1.0.1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          upload_url: ${{ steps.create_release.outputs.upload_url }}
          asset_path: ./Airship.framework.zip
          asset_name: Airship.framework.zip
          asset_content_type: application/zip
      - name: Slack Notification
        uses: homoluctus/slatify@master
        if: always()
        with:
          type: ${{ job.status }}
          job_name: "Deploy iOS SDK to Github :octocat:"
          url: ${{ secrets.SLACK_WEBHOOK }}

  finished:
    runs-on: ubuntu-latest
    needs: [build, upload-docs, publish-pods, deploy-github, deploy-bintray]
    steps:
      - name: Get the version
        id: get_version
        run: echo ::set-output name=VERSION::${GITHUB_REF/refs\/tags\//}
      - name: Slack Notification
        uses: homoluctus/slatify@master
        if: always()
        with:
          type: ${{ job.status }}
          job_name: ":raised_hands: iOS SDK Released! :raised_hands:"
          url: ${{ secrets.SLACK_WEBHOOK }}
